/*
 * Decompiled with CFR 0.145.
 * 
 * Could not load the following classes:
 *  net.minecraft.class_1268
 *  net.minecraft.class_1661
 *  net.minecraft.class_1792
 *  net.minecraft.class_1799
 *  net.minecraft.class_1802
 *  net.minecraft.class_2246
 *  net.minecraft.class_2248
 *  net.minecraft.class_2338
 *  net.minecraft.class_2350
 *  net.minecraft.class_2374
 *  net.minecraft.class_243
 *  net.minecraft.class_2596
 *  net.minecraft.class_2680
 *  net.minecraft.class_2879
 *  net.minecraft.class_304
 *  net.minecraft.class_310
 *  net.minecraft.class_315
 *  net.minecraft.class_634
 *  net.minecraft.class_636
 *  net.minecraft.class_638
 *  net.minecraft.class_746
 */
package dev.recollect.hana.mod.modules.impl.exploit.dev;

import dev.recollect.hana.api.alts.Alt;
import dev.recollect.hana.api.events.eventbus.EventHandler;
import dev.recollect.hana.api.events.impl.EventBreakBlock;
import dev.recollect.hana.api.events.impl.EventCollision;
import dev.recollect.hana.api.events.impl.EventPostSync;
import dev.recollect.hana.api.events.impl.EventSync;
import dev.recollect.hana.api.utils.entity.InventoryUtil;
import dev.recollect.hana.api.utils.entity.MovementUtil;
import dev.recollect.hana.mod.modules.Module;
import dev.recollect.hana.mod.modules.impl.combat.dev.hanacry.ObsidianHelper;
import dev.recollect.hana.mod.modules.impl.player.dev.AutoTool;
import dev.recollect.hana.mod.modules.settings.impl.BooleanSetting;
import dev.recollect.hana.mod.modules.settings.impl.EnumSetting;
import dev.recollect.hana.mod.modules.settings.impl.SliderSetting;
import dev.recollect.hana.socket.network.client.NpSocketClient;
import java.util.function.Predicate;
import net.minecraft.class_1268;
import net.minecraft.class_1661;
import net.minecraft.class_1792;
import net.minecraft.class_1799;
import net.minecraft.class_1802;
import net.minecraft.class_2246;
import net.minecraft.class_2248;
import net.minecraft.class_2338;
import net.minecraft.class_2350;
import net.minecraft.class_2374;
import net.minecraft.class_243;
import net.minecraft.class_2596;
import net.minecraft.class_2680;
import net.minecraft.class_2879;
import net.minecraft.class_304;
import net.minecraft.class_310;
import net.minecraft.class_315;
import net.minecraft.class_634;
import net.minecraft.class_636;
import net.minecraft.class_638;
import net.minecraft.class_746;
import org.bytedeco.javacv.FrameConverter;

public class Phase
extends Module {
    private final EnumSetting<Mode> mode = new EnumSetting<Mode>(Alt.ALLATORIxDEMO("I1v-"), Mode.Vanilla);
    private final SliderSetting afterPearl;
    private final SliderSetting pitch;
    public int clipTimer;
    private final SliderSetting afterBreak;
    public int afterPearlTime;
    private final BooleanSetting waitBreak;
    private final BooleanSetting silent;

    @EventHandler
    public void onSync(EventSync eventSync) {
        class_2338 class_23382;
        double[] a = eventSync;
        Phase a2 = this;
        if (Phase.nullCheck()) {
            return;
        }
        if (a2.clipTimer > 0) {
            --a2.clipTimer;
        }
        if (a2.afterPearlTime > 0) {
            --a2.afterPearlTime;
        }
        if (a2.mode.getValue() == Mode.Sunrise && (Phase.mc.field_1724.field_5976 || a2.playerInsideBlock()) && !Phase.mc.field_1724.method_5869() && !Phase.mc.field_1724.method_5771()) {
            class_2338 class_23383;
            a = MovementUtil.forward(0.5);
            class_23382 = null;
            if (Phase.mc.field_1690.field_1903.method_1434()) {
                class_23383 = class_23382 = class_2338.method_49637((double)(Phase.mc.field_1724.method_23317() + a[0]), (double)(Phase.mc.field_1724.method_23318() + 2.0), (double)(Phase.mc.field_1724.method_23321() + a[1]));
            } else if (Phase.mc.field_1690.field_1832.method_1434()) {
                class_23383 = class_23382 = class_2338.method_49637((double)(Phase.mc.field_1724.method_23317() + a[0]), (double)(Phase.mc.field_1724.method_23318() - 1.0), (double)(Phase.mc.field_1724.method_23321() + a[1]));
            } else {
                if (MovementUtil.isMoving()) {
                    class_23382 = class_2338.method_49637((double)(Phase.mc.field_1724.method_23317() + a[0]), (double)Phase.mc.field_1724.method_23318(), (double)(Phase.mc.field_1724.method_23321() + a[1]));
                }
                class_23383 = class_23382;
            }
            if (class_23383 == null) {
                return;
            }
            int n = AutoTool.getTool(class_23382);
            if (n == -1) {
                return;
            }
            int n2 = Phase.mc.field_1724.method_31548().field_7545;
            InventoryUtil.switchToSlot(n);
            Phase.mc.field_1761.method_2902(class_23382, Phase.mc.field_1724.method_5735());
            Phase.mc.field_1724.method_6104(class_1268.field_5808);
            if (a2.silent.getValue()) {
                InventoryUtil.switchToSlot(n2);
            }
        }
        if (a2.mode.getValue() == Mode.Pearl && Phase.mc.field_1724.field_5976 && !a2.playerInsideBlock() && a2.clipTimer <= 0 && Phase.mc.field_1724.field_6012 > 60) {
            a = MovementUtil.forward(0.5);
            class_23382 = class_2338.method_49637((double)(Phase.mc.field_1724.method_23317() + a[0]), (double)Phase.mc.field_1724.method_23318(), (double)(Phase.mc.field_1724.method_23321() + a[1]));
            if (Phase.mc.field_1690.field_1832.method_1434()) {
                return;
            }
        }
    }

    private /* synthetic */ int findEPSlot() {
        Phase a22;
        Phase phase = a22;
        int a22 = -1;
        if (Phase.mc.field_1724.method_6047().method_7909() == class_1802.field_8634) {
            a22 = Phase.mc.field_1724.method_31548().field_7545;
        }
        if (a22 == -1) {
            int n;
            int n2 = n = 0;
            while (n2 < 9) {
                if (Phase.mc.field_1724.method_31548().method_5438(n).method_7909() == class_1802.field_8634) {
                    a22 = n;
                    return a22;
                }
                n2 = ++n;
            }
        }
        return a22;
    }

    public Phase() {
        super(FrameConverter.ALLATORIxDEMO("A\u0007mV#"), Module.Category.Exploit);
        Phase a;
        a.silent = a.add(new BooleanSetting(FrameConverter.ALLATORIxDEMO("!x\u0003iK2"), false, object -> {
            Object a = object;
            Phase a2 = this;
            return a2.mode.getValue() == Mode.Sunrise;
        }));
        a.waitBreak = a.add(new BooleanSetting(Alt.ALLATORIxDEMO("*~,b\u000ev;s#"), true, object -> {
            Object a = object;
            Phase a2 = this;
            return a2.mode.getValue() == Mode.Sunrise;
        }));
        a.afterBreak = a.add(new SliderSetting(FrameConverter.ALLATORIxDEMO("e6\u0017p\u001eB\u001b|\ncP2"), 4, 1, 20, object -> {
            Object a = object;
            Phase a2 = this;
            return a2.mode.getValue() == Mode.Sunrise && a2.waitBreak.getValue();
        }));
        a.afterPearl = a.add(new SliderSetting(Alt.ALLATORIxDEMO("\tfF\u000fs\u0011!a1g<"), 0, 0, 60, object -> {
            Object a = object;
            Phase a2 = this;
            return a2.mode.getValue() == Mode.Pearl;
        }));
        a.pitch = new SliderSetting(FrameConverter.ALLATORIxDEMO("A\u0006xF."), 80.0, 0.0, 90.0, object -> {
            Object a = object;
            Phase a2 = this;
            return a2.mode.getValue() == Mode.Pearl;
        });
        a.setChinese(Alt.ALLATORIxDEMO("\u7a6d\u58d1"));
    }

    public boolean canNoClip() {
        Phase a;
        if (a.mode.getValue() == Mode.Vanilla) {
            return true;
        }
        if (!a.waitBreak.getValue()) {
            return true;
        }
        return a.clipTimer != 0;
    }

    @EventHandler
    public void onBreakBlock(EventBreakBlock eventBreakBlock) {
        EventBreakBlock a = eventBreakBlock;
        Phase a2 = this;
        a2.clipTimer = (int)a2.afterBreak.getValue();
    }

    public boolean playerInsideBlock() {
        return !Phase.mc.field_1687.method_22347(class_2338.method_49638((class_2374)Phase.mc.field_1724.method_19538()));
    }

    @EventHandler
    public void onPostSync(EventPostSync eventPostSync) {
        EventPostSync a3 = eventPostSync;
        Phase a2 = this;
        if (a2.mode.getValue() == Mode.Pearl && Phase.mc.field_1724.field_5976 && !a2.playerInsideBlock() && a2.clipTimer <= 0 && Phase.mc.field_1724.field_6012 > 60) {
            if (Phase.mc.field_1690.field_1832.method_1434()) {
                return;
            }
            int a3 = a2.findEPSlot();
            int n = Phase.mc.field_1724.method_31548().field_7545;
            if (a3 != -1) {
                InventoryUtil.switchToSlot(a3);
                Phase.mc.field_1724.field_3944.method_52787((class_2596)new class_2879(class_1268.field_5808));
                InventoryUtil.switchToSlot(n);
            }
            a2.clipTimer = 20;
            a2.afterPearlTime = (int)a2.afterPearl.getValue();
        }
    }

    @EventHandler
    public void onCollide(EventCollision a) {
        Phase a2;
        Phase phase = a2;
        if (Phase.nullCheck()) {
            return;
        }
        a2 = class_2338.method_49638((class_2374)Phase.mc.field_1724.method_19538());
        if ((phase.mode.getValue() != Mode.Pearl && phase.canNoClip() || phase.afterPearlTime > 0) && (!a.getPos().equals((Object)a2.method_10074()) || Phase.mc.field_1690.field_1832.method_1434())) {
            a.setState(class_2246.field_10124.method_9564());
        }
    }

    @Override
    public void onEnable() {
        Phase a;
        Phase phase = a;
        phase.afterPearlTime = 0;
        phase.clipTimer = 0;
    }

    private static final class Mode
    extends Enum<Mode> {
        public static final /* enum */ Mode Sunrise;
        private static final /* synthetic */ Mode[] $VALUES;
        public static final /* enum */ Mode Vanilla;
        public static final /* enum */ Mode Pearl;

        /*
         * Exception decompiling
         */
        private /* synthetic */ Mode() {
            // This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
            // java.lang.IllegalStateException
            // org.benf.cfr.reader.bytecode.analysis.variables.VariableFactory.localVariable(VariableFactory.java:53)
            // org.benf.cfr.reader.bytecode.analysis.opgraph.Op02WithProcessedDataAndRefs.mkRetrieve(Op02WithProcessedDataAndRefs.java:931)
            // org.benf.cfr.reader.bytecode.analysis.opgraph.Op02WithProcessedDataAndRefs.createStatement(Op02WithProcessedDataAndRefs.java:979)
            // org.benf.cfr.reader.bytecode.analysis.opgraph.Op02WithProcessedDataAndRefs.access$100(Op02WithProcessedDataAndRefs.java:56)
            // org.benf.cfr.reader.bytecode.analysis.opgraph.Op02WithProcessedDataAndRefs$11.call(Op02WithProcessedDataAndRefs.java:2060)
            // org.benf.cfr.reader.bytecode.analysis.opgraph.Op02WithProcessedDataAndRefs$11.call(Op02WithProcessedDataAndRefs.java:2057)
            // org.benf.cfr.reader.util.graph.AbstractGraphVisitorFI.process(AbstractGraphVisitorFI.java:60)
            // org.benf.cfr.reader.bytecode.analysis.opgraph.Op02WithProcessedDataAndRefs.convertToOp03List(Op02WithProcessedDataAndRefs.java:2069)
            // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:342)
            // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:184)
            // org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:129)
            // org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:96)
            // org.benf.cfr.reader.entities.Method.analyse(Method.java:397)
            // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:901)
            // org.benf.cfr.reader.entities.ClassFile.analyseInnerClassesPass1(ClassFile.java:778)
            // org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:886)
            // org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:797)
            // org.benf.cfr.reader.Driver.doClass(Driver.java:58)
            // org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:67)
            // org.benf.cfr.reader.Main.main(Main.java:48)
            throw new IllegalStateException("Decompilation failed");
        }

        public static Mode[] values() {
            return (Mode[])$VALUES.clone();
        }

        public static Mode valueOf(String a) {
            return Enum.valueOf(Mode.class, a);
        }

        private static /* synthetic */ Mode[] $values() {
            Mode[] arrmode = new Mode[3];
            arrmode[0] = Vanilla;
            arrmode[1] = Pearl;
            arrmode[2] = Sunrise;
            return arrmode;
        }

        static {
            Vanilla = new Mode(ObsidianHelper.ALLATORIxDEMO("<B&A/E#"), 0);
            Pearl = new Mode(NpSocketClient.ALLATORIxDEMO("\u0017i-!"), 1);
            Sunrise = new Mode(ObsidianHelper.ALLATORIxDEMO("9V&Z*Z'"), 2);
            $VALUES = Mode.$values();
        }
    }

}
